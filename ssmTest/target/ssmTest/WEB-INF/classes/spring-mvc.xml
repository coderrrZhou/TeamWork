<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======



>>>>>>> gameOver~
>>>>>>> GameOver
    <mvc:default-servlet-handler/>
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="ssm.controller"/>
        <!--<context:annotation-config/>-->
<<<<<<< HEAD

=======
<<<<<<< HEAD

=======
>>>>>>> gameOver~
>>>>>>> GameOver
    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true">
    </aop:aspectj-autoproxy>
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <!-- 支持JSON数据格式 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/><!-- 解析导出文件byte流 -->
                <ref bean="fastJsonHttpMessageConverter"/>
                <!--
                            <ref bean="mappingJacksonHttpMessageConverter" />
                 -->
            </list>
        </property>
    </bean>

    <!-- 使用fastJson来支持JSON数据格式 -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json</value>
            </list>
        </property>
        <property name="features">
            <list>
                <value>WriteMapNullValue</value>
                <value>QuoteFieldNames</value>
            </list>
        </property>
    </bean>

<<<<<<< HEAD
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
=======
<<<<<<< HEAD
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
=======
    <mvc:annotation-driven/>
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean id="ViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
>>>>>>> gameOver~
>>>>>>> GameOver
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
    </bean>

<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
    <!--2.静态资源放行-->
    <mvc:resources location="/static/" mapping="/static/**"/>

    <!--<mvc:resources location="/js/" mapping="/static/js/**"/>-->
    <!--<mvc:resources location="/css/" mapping="/static/css/**"/>-->

>>>>>>> gameOver~
>>>>>>> GameOver
    <!--test code-->

    <bean id="viewMappings" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" >

        <property name="defaultHandler">

            <bean name="registered" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />

        </property>

    </bean>



</beans>